[metadata]
name = omega-update
version = 2.0.0
description = 一个完整的软件更新管理系统，支持完整包、增量包和智能存储管理
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/omega-team/omega-update
author = Omega Development Team
author_email = dev@omega-update.com
license = MIT
license_file = LICENSE
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: System Administrators
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: System :: Software Distribution
    Topic :: System :: Systems Administration
    Topic :: Internet :: WWW/HTTP :: HTTP Servers

[options]
packages = find:
python_requires = >=3.8
include_package_data = True
zip_safe = False

[options.packages.find]
exclude =
    tests*
    docs*

[options.entry_points]
console_scripts =
    omega-server = server.enhanced_main:main
    omega-upload = tools.upload.upload_tool:main
    omega-download = tools.download.download_tool:main

# Flake8 配置
[flake8]
max-line-length = 88
extend-ignore = 
    # E203: whitespace before ':' (conflicts with black)
    E203,
    # W503: line break before binary operator (conflicts with black)
    W503,
    # E501: line too long (handled by black)
    E501
exclude = 
    .git,
    __pycache__,
    .venv,
    venv,
    .eggs,
    *.egg,
    build,
    dist,
    releases,
    docs/_build,
    .tox
per-file-ignores =
    # __init__.py files can have unused imports
    __init__.py:F401
    # Test files can have unused imports and long lines
    tests/*:F401,E501
max-complexity = 10
import-order-style = google
application-import-names = server,tools

# MyPy 配置
[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-bsdiff4.*]
ignore_missing_imports = True

[mypy-psutil.*]
ignore_missing_imports = True

[mypy-tkinter.*]
ignore_missing_imports = True

# Coverage 配置
[coverage:run]
source = server,tools
omit = 
    */tests/*
    */test_*
    setup.py
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Pytest 配置
[tool:pytest]
minversion = 7.0
addopts = -ra -q --strict-markers --strict-config
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
